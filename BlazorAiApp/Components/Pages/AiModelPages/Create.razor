@page "/aimodels/create"
@inject BlazorAiApp.Data.ApplicationDbContext DB
@using BlazorAiApp.Data
@using Microsoft.Extensions.Options
@inject IOptions<List<LocalAIModel>> LocalAIModels
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>AiModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="_aiModel" OnValidSubmit="AddAiModel" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputSelect id="name" @bind-Value="_aiModel.Name" class="form-control">  

                    
                        @foreach (var option in LocalAIModels.Value)
                        {
                            <option value="@option.Name">@option.Name</option>

                        }
                   
                </InputSelect>
                <ValidationMessage For="() => _aiModel.Name " class="text-danger" />
            </div>        
            <div class="mb-3">
                <label for="modelrepo" class="form-label">ModelRepo:</label> 
                <InputText id="modelrepo" @bind-Value="_aiModel.ModelRepo" class="form-control" />
                <ValidationMessage For="() => _aiModel.ModelRepo" class="text-danger" />
            </div>        
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label> 
                <InputText id="description" @bind-Value="_aiModel.Description" class="form-control" />
                <ValidationMessage For="() => _aiModel.Description" class="text-danger" />
            </div>        
            <div class="mb-3">
                <label for="author" class="form-label">Author:</label> 
                <InputText id="author" @bind-Value="_aiModel.Author" class="form-control" />
                <ValidationMessage For="() => _aiModel.Author" class="text-danger" />
            </div>        
            <div class="mb-3">
                <label for="chathistory" class="form-label">ChatHistory:</label> 
                @* <InputText id="chathistory" @bind-Value="_aiModel.ChatHistory" class="form-control" />  *@
                <ValidationMessage For="() => _aiModel.ChatHistory" class="text-danger" />
            </div>        
            <div class="mb-3">
                <label for="chathistory_list" class="form-label">ChatHistory_List:</label> 
                @* <InputText id="chathistory_list" @bind-Value="_aiModel.ChatHistory_List" class="form-control" />  *@
                <ValidationMessage For="() => _aiModel.ChatHistory_List" class="text-danger" />
            </div>        
            <div class="mb-3">
                <label for="createdate" class="form-label">CreateDate:</label> 
                <InputDate id="createdate" @bind-Value="_aiModel.CreateDate" class="form-control" />
                <ValidationMessage For="() => _aiModel.CreateDate" class="text-danger" />
            </div>        
            <div class="mb-3">
                <label for="number" class="form-label">Number:</label> 
                <InputNumber id="number" @bind-Value="_aiModel.Number" class="form-control" />
                <ValidationMessage For="() => _aiModel.Number" class="text-danger" />
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/aimodels">Back to List</a>
</div>
@code {
    private int selectedOptionId;
    public LocalAIModel selectedOption { 
        get {
            LocalAIModel value = new LocalAIModel();
            Predicate<LocalAIModel> match = (f) => f.Id == selectedOptionId;
            value.Id = selectedOptionId;
            value.Name = LocalAIModels.Value.Find(match).Name;
                return value;
            } 
    }

    public class LocalAIModel
    {
        public int Id { get; set; }
        public string Name { get; set; }


    }

}


